PROGRAM         : STATEMENT_LIST | STATEMENT_LIST

STATEMENT_LIST  : STATEMENT STATEMENT_LIST | STATEMENT

STATEMENT       : FLOOR_INIT | LET | WHILE | IF | ASSIGN | INC_ASSIGN | DEC_ASSIGN

FLOOR_INIT      : floor size POS_INT OPT_FLOOR_RES
OPT_FLOOR_RES   : reserve FLOOR_RES_LIST | ε
FLOOR_RES_LIST  : FLOOR_RES_VALUE , FLOOR_RES_LIST | FLOOR_RES_VALUE
FLOOR_RES_VALUE : FLOOR_RANGE | FLOOR_INDEX
FLOOR_RANGE     : POS_INT - POS_INT
FLOOR_INDEX     : POS_INT

LET             : let ID OPT_LABEL OPT_FLOOR_SLOT
WHILE           : while OPT_COND_EXP BLOCK
IF              : if CONDITION_EXP BLOCK OPT_ELSE
ASSIGN          : WRITE_REF = READ_EXP
INC_ASSIGN      : ID += 1
DEC_ASSIGN      : ID -= 1
SWAP            : FLOOR_REF <-> FLOOR_REF

OPT_LABEL       : labeled WORD | ε
OPT_FLOOR_SLOT  : DIR_FLOOR_SLOT | ε
DIR_FLOOR_SLOT  : at floor [ POS_INT ]

OPT_ELSE        : ELSE | ε
ELSE            : else BLOCK

OPT_COND_EXP    : CONDITION_EXP | ε
CONDITION_EXP   : ( COND_EXP1 )
COND_EXP1       : COND_EXP2 COND_EXP1'
COND_EXP1'      : || COND_EXP2 COND_EXP1' | ε
COND_EXP2       : COND_EXP3 COND_EXP2'
COND_EXP2'      : && COND_EXP3 COND_EXP2' | ε
COND_EXP3       : LEFT_COMPARABLE != RIGHT_COMPARABLE | LEFT_COMPARABLE == RIGHT_COMPARABLE | LEFT_COMPARABLE > RIGHT_COMPARABLE | LEFT_COMPARABLE < RIGHT_COMPARABLE

BLOCK           : { STATEMENT_LIST }

READ_EXP        : READ_ASSIGN_EXP | MATH_EXP | READ_REF
MATH_EXP        : ADDITIVE_EXP | MULT_EXP | FLOORED_DIV_EXP | MOD_EXP | NEG_EXP
ADDITIVE_EXP    : ADDITION_EXP | SUBTRACTION_EXP
ADDITION_EXP    : READ_REF + READ_REF
SUBTRACTION_EXP : READ_REF - READ_REF
MULT_EXP        : FLOOR_REF * FLOOR_REF
FLOORED_DIV_EXP : FLOOR_REF ~/ FLOOR_REF
MOD_EXP         : FLOOR_REF % FLOOR_REF
NEG_EXP         : - READ_REF

LEFT_COMPARABLE : READ_REF | READ_ASSIGN_EXP | INC_ASSIGN | DEC_ASSIGN
RIGHT_COMPARABLE: READ_REF | ZERO_LITERAL

READ_REF        : INBOX | FLOOR_REF
WRITE_REF       : OUTBOX | FLOOR_REF
FLOOR_REF       : ID | IND_FLOOR_SLOT
READ_ASSIGN_EXP : FLOOR_REF = READ_REF

INBOX           : inbox
OUTBOX          : outbox
ID              : WORD
IND_FLOOR_SLOT  : floor [ WORD ]

ZERO_LITERAL    : 0
POS_INT         : [1-9][0-9]* | 0
WORD            : [a-z]+
